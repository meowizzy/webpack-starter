jQuery(document).ready(function ($) {
    var devBaseUrl = 'https://api-dev.a-pay.uz:443/api';

    function getCookie(cname) {
        let name = cname + "=";
        let decodedCookie = decodeURIComponent(document.cookie);
        let ca = decodedCookie.split(';');
        for(let i = 0; i <ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return "";
    }

    var currentLang = getCookie("pll_language");
    var urlParams = new URLSearchParams(window.location.search);
    var billId = urlParams.get('billId');

    var mainLoading = $('.main-loading');
    var mainWrap = $('.payment-wrap');
    var paymentStatus = $('.payment-status');
    var formStep1 = $('.form-step1');
    var formStep2 = $('.form-step2');
    var cardFields = $('.card-fields');
    //var cvvField = $('.cvv-field');
    var panInput = $('.form-card-input');
    var expiryInput = $('.form-expiry-input');
    var cvvInput = $('.form-cvv-input');
    var smsInput = $('.form-sms-input');
    var loader = $('.payment-loading');
    var loaderText = $('.payment-loading__text');
    var currentCardType = undefined;

    var smsInput1 = $('.sms-input1');
    var smsInput2 = $('.sms-input2');
    var smsInput3 = $('.sms-input3');
    var smsInput4 = $('.sms-input4');
    var smsInput5 = $('.sms-input5');
    var smsInput6 = $('.sms-input6');

    var smsCountdown = $('.sms-countdown');
    var getNewCodeBtn = $('.get-new-code-btn');
    var cancelSmsStep = $('.payment-cancel-btn');
    var smsField = $('.payment-details__form__sms__field');
    var smsTimeout = null;

    var paymentFinishState = $('.payment-finish-state');
    var firstReq = false;

    const getBillData = async () => {
        try {
            const response = await $.ajax({
                type: "GET",
                crossDomain: true,
                headers: {
                    "accept": "application/json",
                    "language": currentLang,
                    "Access-Control-Allow-Origin":"*"
                },
                url: `${devBaseUrl}/web/v1/bills/check/${billId}`,
            });

            if (response) {
                if (!firstReq) {
                    $('.payment-details__head__title').text(response.merchantName);
                    $('.payment-number').text(`${billId}`);
                    $('.payment-amount span').text(`${String(response.amount).replace(/\B(?=(\d{3})+(?!\d))/g, ' ')}`);
                }

                paymentStatus.removeClass('PENDING');
                paymentStatus.addClass(`${response.status.code}`);

                mainLoading.addClass('d-none');
                mainWrap.removeClass('d-none');

                if (response.status.code === "PENDING") {
                    formStep1.removeClass('d-none');
                } else {
                    paymentFinishState.removeClass('d-none');
                    paymentFinishState.addClass(`${response.status.code}`);
                }
            }

            firstReq = true;
        } catch (error){
            console.log(error);
        } finally {
            loader.addClass('d-none');
            loaderText.find(".s2").addClass('d-none');
        }
    }

    if (billId) {
        getBillData();
    }

    const clearSmsTimeout = () => {
        if (smsTimeout) {
            clearTimeout(smsTimeout);
            smsTimeout = null;
        }
    }

    const setCountDown = (destroy) => {
        smsCountdown.countdown(destroy ? destroy : {until: '+59s', compact: true, format: "S"});

        if (!destroy) {
            smsTimeout = setTimeout(() => {
                smsCountdown.addClass('d-none');
                getNewCodeBtn.removeAttr('disabled');
                setCountDown('destroy');
            }, 59000);
        }
    }

    var cardsTypes = {
        VISA: "VISA",
        MASTER_CARD: "MASTER_CARD",
        UZCARD: "UZCARD",
        HUMO: "HUMO"
    };

    Inputmask({
        mask: "9999 9999 9999 9999",
        placeholder: "",
        showMaskOnHover: false,
    }).mask(panInput)

    Inputmask({
        mask: "99 / 99",
        placeholder: " ",
        showMaskOnHover: false,
    }).mask(expiryInput)

    Inputmask({
        mask: "999",
        placeholder: "",
        showMaskOnHover: false,
    }).mask(cvvInput)

    Inputmask({
        mask: "999999",
        placeholder: "",
        showMaskOnHover: false,
    }).mask(smsInput)

    // on pan change

    panInput.on('input', function(e) {
        var val = e.target.value.replace(/\D/g, "");

        if (val) {
            var isVisa = val[0] === "4";
            var isMasterCard = val[0] === "2" || val[0] === "5";
            var isUzcard = val.substring(0, 4) === "8600";
            var isHumo = val.substring(0, 4) === "9860";

            if (isVisa) {
                currentCardType = cardsTypes.VISA;
            }

            if (isMasterCard) {
                currentCardType = cardsTypes.MASTER_CARD;
            }

            if (isUzcard) {
                currentCardType = cardsTypes.UZCARD;
            }

            if (isHumo) {
                currentCardType = cardsTypes.HUMO;
            }

            if (isVisa || isMasterCard) {
                cvvInput.removeAttr('disabled');
            } else {
                cvvInput.attr('disabled', 'disabled');
            }
        } else {
            currentCardType = undefined;
            cvvInput.attr('disabled', 'disabled');
        }
    });

    var cardNumber = undefined;
    var cardExpire = undefined;

    formStep1.on('submit', async function (e) {
        e.preventDefault();

        var formData = e.target.elements;

        cardNumber = formData.cardNumber.value.replace(/\D/g, "");
        cardExpire = formData.cardExpire.value.replace(/\D/g, "");
        //var cvv = formData.cvv.value.replace(/\D/g, "");

        var hasErrors = false;

        if (cardNumber.length !== 16) {
            cardFields.addClass("has-error");
            hasErrors = true;
        }

        if (cardExpire.length !== 4) {
            cardFields.addClass("has-error");
            hasErrors = true;
        }

        // if ((currentCardType === cardsTypes.VISA || currentCardType === cardsTypes.MASTER_CARD) && cvv.length !== 3) {
        //     cvvField.addClass("has-error");
        //     hasErrors = true;
        // }

        if (hasErrors) {
            return;
        }

        cardFields.removeClass("has-error");
        //cvvField.removeClass("has-error");

        loader.removeClass('d-none');
        loaderText.find(".s1").removeClass('d-none');
        formStep1.addClass('d-none');

        try {
            const response = await $.ajax({
                type: "PUT",
                url: `${devBaseUrl}/web/v1/bills/update`,
                contentType: "application/json",
                data: JSON.stringify({
                    billId,
                    expiry: cardExpire,
                    pan: cardNumber,
                })
            });

            if (response) {
                $('.phone-number-sms').text(`${response.ownerPhone}`);
            }

            formStep2.removeClass('d-none');
            setCountDown();

            setTimeout(() => {
                smsInput.focus();
            }, 100);
        }
        catch (error){
            if (error.responseJSON) {
                iziToast.error({
                    title: error.responseJSON.detail,
                });
            }

            formStep1.removeClass('d-none');
        } finally {
            loader.addClass('d-none');
            loaderText.find(".s1").addClass('d-none');
        }
    });

    // on sms change
    smsInput.on('input', async function(e) {
        var val = e.target.value.replace(/\D/g, "");

        smsInput1.text(val[0] || "");
        smsInput2.text(val[1] || "");
        smsInput3.text(val[2] || "");
        smsInput4.text(val[3] || "");
        smsInput5.text(val[4] || "");
        smsInput6.text(val[5] || "");

        if (val[5]) {
            loader.removeClass('d-none');
            loaderText.find(".s2").removeClass('d-none');
            formStep2.addClass('d-none');

            try {
                await $.ajax({
                    type: "PUT",
                    url: `${devBaseUrl}/web/v1/bills/pay`,
                    contentType: "application/json",
                    data: JSON.stringify({
                        billId,
                        confirmationKey: val
                    })
                });

                setTimeout(() => {
                    getBillData();
                }, 4000);

                smsField.removeClass("has-error");
            }
            catch (error){
                if (error.responseJSON) {
                    formStep2.removeClass('d-none');
                    smsField.addClass("has-error");
                }

                loader.addClass('d-none');
                loaderText.find(".s2").addClass('d-none');
            }
        }
    });

    // get new code
    getNewCodeBtn.on('click', async function () {
        formStep2.addClass('d-none');
        loader.removeClass('d-none');
        loaderText.find(".s1").removeClass('d-none');

        smsField.removeClass("has-error");
        // clear sms input
        smsInput.val('');
        smsInput1.text("");
        smsInput2.text("");
        smsInput3.text("");
        smsInput4.text("");
        smsInput5.text("");
        smsInput6.text("");

        try {
            const response = await $.ajax({
                type: "POST",
                url: `${devBaseUrl}/web/v1/bills/resend-activation-code`,
                contentType: "application/json",
                data: JSON.stringify({
                    billId,
                    expiry: cardExpire,
                    pan: cardNumber,
                })
            });


            smsCountdown.removeClass('d-none');
            getNewCodeBtn.attr('disabled', 'disabled');

            setCountDown();
        } catch (error){
            if (error.responseJSON) {

            }


        } finally {
            loader.addClass('d-none');
            loaderText.find(".s1").addClass('d-none');
            formStep2.removeClass('d-none');
        }
    });

    // cancel sms step
    cancelSmsStep.on('click', function () {
        setCountDown('destroy');
        clearSmsTimeout();

        formStep2.addClass('d-none');
        formStep1.removeClass('d-none');
        smsField.removeClass("has-error");

        // clear sms input
        smsInput.val('');
        smsInput1.text("");
        smsInput2.text("");
        smsInput3.text("");
        smsInput4.text("");
        smsInput5.text("");
        smsInput6.text("");
    });

    // lang change

    $('.dropdown-menu ul li a').on('click', function (e) {
        e.preventDefault();

        var hrefValue = $(this).attr('href');

        window.location.href = `${hrefValue}?billId=${billId}`;
    });
});